version: '3'
services:
  n8n:
    image: n8nio/n8n
    container_name: n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false   # Désactive l'authentification de base, à activer si tu veux sécuriser l'accès
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - VUE_APP_URL_BASE_API=http://localhost:5678
      - NODE_FUNCTION_ALLOW_EXTERNAL=cheerio
    ports:
      - 5678:5678  # Port de N8N exposé sur le port 5678 de ta machine
    volumes:
      - n8n_data:/home/node/.n8n  # Volume persistant pour stocker les données
    networks:
      - ai_net
    restart: always  # Assure-toi que N8N redémarre automatiquement si le container s'arrête
  ollama:
    image: ollama/ollama
    container_name: ollama
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - OLLAMA_MODELS=/models
    ports:
      - 11434:11434
    volumes:
      - ollama_data:/root/.ollama
      - E:/AI/ollama/models:/models
    networks:
      - ai_net
    restart: always
    entrypoint: ["/bin/bash", "-c", "ollama serve & sleep 5 && ollama pull mistral && wait"]
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 59117:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    volumes:
      - mongo_data:/data/db
    networks:
      - ai_net
  nextjs:
    build:
      context: ./web-manager
      dockerfile: Dockerfile
    container_name: nextjs
    volumes:
      - ./web-manager:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB_NAME}
    depends_on:
      - mongodb
    networks:
      - ai_net
volumes:
  n8n_data:  # Déclare un volume pour stocker les données N8N
  ollama_data:
  mongo_data:
networks:
  ai_net:
    driver: bridge
